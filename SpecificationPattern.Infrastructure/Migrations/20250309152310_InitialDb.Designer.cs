// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpecificationPattern.Data;

#nullable disable

namespace SpecificationPattern.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250309152310_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SpecificationPattern.Domain.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.HasKey("Id");

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("SpecificationPattern.Domain.Developer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Developers", (string)null);
                });

            modelBuilder.Entity("SpecificationPattern.Domain.Address", b =>
                {
                    b.OwnsOne("SpecificationPattern.Domain.ValueObjects.AddressCity", "AddressCity", b1 =>
                        {
                            b1.Property<Guid>("AddressId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("City");

                            b1.HasKey("AddressId");

                            b1.ToTable("Addresses");

                            b1.WithOwner()
                                .HasForeignKey("AddressId");
                        });

                    b.OwnsOne("SpecificationPattern.Domain.ValueObjects.AddressStreet", "AddressStreet", b1 =>
                        {
                            b1.Property<Guid>("AddressId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Street");

                            b1.HasKey("AddressId");

                            b1.ToTable("Addresses");

                            b1.WithOwner()
                                .HasForeignKey("AddressId");
                        });

                    b.Navigation("AddressCity")
                        .IsRequired();

                    b.Navigation("AddressStreet")
                        .IsRequired();
                });

            modelBuilder.Entity("SpecificationPattern.Domain.Developer", b =>
                {
                    b.HasOne("SpecificationPattern.Domain.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("SpecificationPattern.Domain.ValueObjects.DeveloperEmail", "DeveloperEmail", b1 =>
                        {
                            b1.Property<Guid>("DeveloperId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Email");

                            b1.HasKey("DeveloperId");

                            b1.ToTable("Developers");

                            b1.WithOwner()
                                .HasForeignKey("DeveloperId");
                        });

                    b.OwnsOne("SpecificationPattern.Domain.ValueObjects.DeveloperEstimatedIncome", "DeveloperEstimatedIncome", b1 =>
                        {
                            b1.Property<Guid>("DeveloperId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("EstimatedIncome");

                            b1.HasKey("DeveloperId");

                            b1.ToTable("Developers");

                            b1.WithOwner()
                                .HasForeignKey("DeveloperId");
                        });

                    b.OwnsOne("SpecificationPattern.Domain.ValueObjects.DeveloperName", "DeveloperName", b1 =>
                        {
                            b1.Property<Guid>("DeveloperId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Name");

                            b1.HasKey("DeveloperId");

                            b1.ToTable("Developers");

                            b1.WithOwner()
                                .HasForeignKey("DeveloperId");
                        });

                    b.OwnsOne("SpecificationPattern.Domain.ValueObjects.DeveloperYearsOfExperience", "DeveloperYearsOfExperience", b1 =>
                        {
                            b1.Property<Guid>("DeveloperId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Value")
                                .HasColumnType("int")
                                .HasColumnName("YearsOfExperience");

                            b1.HasKey("DeveloperId");

                            b1.ToTable("Developers");

                            b1.WithOwner()
                                .HasForeignKey("DeveloperId");
                        });

                    b.Navigation("Address");

                    b.Navigation("DeveloperEmail")
                        .IsRequired();

                    b.Navigation("DeveloperEstimatedIncome")
                        .IsRequired();

                    b.Navigation("DeveloperName")
                        .IsRequired();

                    b.Navigation("DeveloperYearsOfExperience")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
